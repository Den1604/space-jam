#import LetterDelivery.mpat

#define .NpcID:Muskular         00

#new:Header $Header
{
	[MainScript] $Script_Main
	[Background] 80200000
	[EntryList] $EntryList
	[EntryCount] 1
}

#new:EntryList $EntryList
{
	~Vec4f:Entry_0
}

#new:Script $Script_TexturePan_Update
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_TexturePan_Simple ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_TexturePan_Complex ( )
    Return
    End
}

#new:Function $Function_TexturePan_Simple
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    SW          RA, 14 (SP)
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o30
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o40
    ADDU        V0, V1, V0
    .o30
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o44
    SUBU        V0, V1, A0
    .o40
    SW          V0, A8 (S0)
    .o44
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o64
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o74
    ADDU        V0, V1, V0
    .o64
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o78
    SUBU        V0, V1, A0
    .o74
    SW          V0, AC (S0)
    .o78
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o98
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA8
    ADDU        V0, V1, V0
    .o98
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oAC
    SUBU        V0, V1, A0
    .oA8
    SW          V0, B0 (S0)
    .oAC
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oCC
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oDC
    ADDU        V0, V1, V0
    .oCC
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE0
    SUBU        V0, V1, A0
    .oDC
    SW          V0, B4 (S0)
    .oE0
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

#new:Function $Function_TexturePan_Complex
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    BEQ         A1, R0, .o24
    SW          RA, 14 (SP)
    SW          R0, 70 (S0)
    SW          R0, 74 (S0)
    SW          R0, 78 (S0)
    SW          R0, 7C (S0)
    .o24
    LW          V0, 70 (S0)
    BNE         V0, R0, .o64
    NOP
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o50
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o60
    ADDU        V0, V1, V0
    .o50
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o64
    SUBU        V0, V1, A0
    .o60
    SW          V0, A8 (S0)
    .o64
    LW          V0, 74 (S0)
    BNE         V0, R0, .oA4
    NOP
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o90
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA0
    ADDU        V0, V1, V0
    .o90
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oA4
    SUBU        V0, V1, A0
    .oA0
    SW          V0, AC (S0)
    .oA4
    LW          V0, 78 (S0)
    BNE         V0, R0, .oE4
    NOP
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oD0
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oE0
    ADDU        V0, V1, V0
    .oD0
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE4
    SUBU        V0, V1, A0
    .oE0
    SW          V0, B0 (S0)
    .oE4
    LW          V0, 7C (S0)
    BNE         V0, R0, .o124
    NOP
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o110
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o120
    ADDU        V0, V1, V0
    .o110
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o124
    SUBU        V0, V1, A0
    .o120
    SW          V0, B4 (S0)
    .o124
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          V0, 70 (S0)
    LW          V1, 78 (S0)
    LW          A0, 98 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 70 (S0)
    LW          V0, 74 (S0)
    ADDIU       V1, V1, 1
    SW          V1, 78 (S0)
    LW          V1, 70 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 74 (S0)
    LW          V0, 7C (S0)
    SLT         V1, V1, A0
    ADDIU       V0, V0, 1
    BNE         V1, R0, .o198
    SW          V0, 7C (S0)
    SW          R0, 70 (S0)
    .o198
    LW          V0, 74 (S0)
    LW          V1, 9C (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1AC
    SW          R0, 74 (S0)
    .o1AC
    LW          V0, 78 (S0)
    LW          V1, A0 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1C0
    SW          R0, 78 (S0)
    .o1C0
    LW          V0, 7C (S0)
    LW          V1, A4 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1D4
    SW          R0, 7C (S0)
    .o1D4
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

#new:Script_Main $Script_Main
{
	Set   *GB_WorldLocation  .Location:StarHaven
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True
	Call  SetCamLeadPlayer   ( .Cam:Default .False )
    Exec $Script_MakeEntities
	Exec  $Script_SetupMusic
	Exec  $Script_SetupTexturePan
    Exec  $Script_ItsCubinTime
	Exec  $Script_EnterMap
    Call  MakeNpcs  ( .True $NpcGroupList_8025136C )
	Return
	End
}

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:HiddenYellowBlock ~Vec4d:YellowBlock .Item:IcedPotato 80000000 )
    Call  AssignBlockFlag   ( *MF_btf_17_Yellow )
    Call  MakeEntity    ( .Entity:HiddenRedBlock ~Vec4d:RedBlock .Item:AttackFXA 80000000 )
    Call  AssignBlockFlag   ( *MF_btf_17_Red )
    Return
    End
}

#new:Function_Init $Function_Init
{
	PUSH    RA
	LIA     A0, 800B0CF0
	LIA     A1, "hos_tex"
	JAL     800654F0 % sprintf
	RESERVED
	CLEAR  V0
	JPOP   RA
}

#new:Script $Script_SetupMusic
{
	Call  SetMusicTrack ( 00000000 .Song:StarHaven 00000000 00000008 )
	Call  ClearAmbientSounds ( 250` )
	Return
	End
}

#new:Script $Script_SetupTexturePan
{
	Call     802C9000 	( ~Model:River 0 )
	Call     802C9000 	( ~Model:Waterfall 1 )
    Call     802C9000 	( ~Model:Waterfall_2 1 )
	Thread
		Set  *Var[0] 0
		Set  *Var[1] 0
		Set  *Var[2] 1F4
		Set  *Var[3] 32
		Set  *Var[4] 3E8
		Set  *Var[5] 0
		Set  *Var[6] 0
		Set  *Var[7] 0
		Set  *Var[8] 0
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Thread
		Set  *Var[0] 1
		Set  *Var[1] 0
		Set  *Var[2] 7D0
		Set  *Var[3] 0
		Set  *Var[4] 0
		Set  *Var[5] 0
		Set  *Var[6] 0
		Set  *Var[7] 0
		Set  *Var[8] 0
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Return
	End
}

#new:Script $Script_EnterMap
{

    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry_0
            Set   *Var[0] $Script_CreateExitTriggers
            Exec  EnterWalk
        Default
            Exec  $Script_CreateExitTriggers
    EndSwitch
    Return
    End



	Return
	End
}

#new:Script $Script_CreateExitTriggers
{
    Bind $Script_Exit_Entry_0 .Trigger:FloorAbove ~Collider:Exit_0_Floor 00000001 00000000
	Return
	End
}

#new:Script $Script_Exit_Entry_0 {
	SetGroup 0000001B
    Call  UseExitHeading ( 60` ~Entry:Entry_0 )
	Exec  ExitWalk
	Call  GotoMap   ( "btf_02" ~Entry:btf_02:Entry_0 )
	Wait  100`
	Return
	End
}

#new:Script $Script_ItsCubinTime { % Cookin

    Set *MapFlag[0] .False % Cubes 1-4
    Set *MapFlag[1] .False % Cubes 5-8
    Set *MapFlag[2] .False % Cubes 9-12
    Set *MapFlag[3] .False % Big Cube 1
    Set *MapFlag[4] .False % Cubes 13-16
    Set *MapFlag[5] .False % Cubes 17-20
    Set *MapFlag[6] .False % Big Cube 2
    Set *MapFlag[7] .False % Cubes 21-24

    Set *MapFlag[8] .False % CubeHomeDoor

    % HAHAHAHA MORE THAN 16 MAPFLAGS I KNEW IT THEY WERE HIDING KNOWLEDGE FROM US!!!!
    Set *MapFlag[09] .False % PuzzleCube 1
    Set *MapFlag[0A] .False % PuzzleCube 2
    Set *MapFlag[0B] .False % PuzzleCube 3
    Set *MapFlag[0C] .False % PuzzleCube 4
    Set *MapFlag[0D] .False % PuzzleCube 5
    Set *MapFlag[0E] .False % PuzzleCube 6
    Set *MapFlag[0F] .False % PuzzleCube 7
    Set *MapFlag[10] .False % PuzzleCube 8
    Set *MapFlag[11] .False % PuzzleCube 9


    Bind $Script_Trigger_0 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_0 00000001 00000000
    Bind $Script_Trigger_1 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_1 00000001 00000000
    Bind $Script_Trigger_2 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_2 00000001 00000000
    Bind $Script_Trigger_3 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_3 00000001 00000000
    Bind $Script_Trigger_4 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_4 00000001 00000000
    Bind $Script_Trigger_5 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_5 00000001 00000000
    Bind $Script_Trigger_6 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_6 00000001 00000000
    Bind $Script_Trigger_7 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_7 00000001 00000000
    Bind $Script_Trigger_8 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_8 00000001 00000000
    Bind $Script_Trigger_9 .Trigger:FloorAbove ~Collider:CosmicCubeTrigger_9 00000001 00000000

    Bind $Script_Trigger_START .Trigger:FloorAbove ~Collider:BlockTrigger_BASE 00000001 00000000
    Bind $Script_Trigger_END .Trigger:FloorAbove ~Collider:HomeCol_Ground_Trigger 00000001 00000000

    If *MF_btf_17_CubePuzzleSolved == .False
        % No point in binding the triggers when the Puzzle has already been solved anyway
        Bind $Script_Trigger_Puzzle1 .Trigger:FloorPressA ~Collider:PuzzleCol_1 00000001 00000000
        Bind $Script_Trigger_Puzzle2 .Trigger:FloorPressA ~Collider:PuzzleCol_2 00000001 00000000
        Bind $Script_Trigger_Puzzle3 .Trigger:FloorPressA ~Collider:PuzzleCol_3 00000001 00000000
        Bind $Script_Trigger_Puzzle4 .Trigger:FloorPressA ~Collider:PuzzleCol_4 00000001 00000000
        Bind $Script_Trigger_Puzzle5 .Trigger:FloorPressA ~Collider:PuzzleCol_5 00000001 00000000
        Bind $Script_Trigger_Puzzle6 .Trigger:FloorPressA ~Collider:PuzzleCol_6 00000001 00000000
        Bind $Script_Trigger_Puzzle7 .Trigger:FloorPressA ~Collider:PuzzleCol_7 00000001 00000000
        Bind $Script_Trigger_Puzzle8 .Trigger:FloorPressA ~Collider:PuzzleCol_8 00000001 00000000
        Bind $Script_Trigger_Puzzle9 .Trigger:FloorPressA ~Collider:PuzzleCol_9 00000001 00000000

        Call EnableModel ( ~Model:PuzzleCube_1_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_2_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_3_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_4_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_5_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_6_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_7_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_8_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_9_ON .False )

        Call EnableModel( ~Model:Cubes_PostPuzzle_ON .False )
    Else
        Call EnableModel ( ~Model:PuzzleCube_1_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_2_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_3_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_4_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_5_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_6_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_7_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_8_OFF .False )
        Call EnableModel ( ~Model:PuzzleCube_9_OFF .False )
        Call EnableModel( ~Model:Cubes_PostPuzzle_OFF .False )
        Call ModifyColliderFlags ( 00000000 ~Collider:PuzzleWallCol 7FFFFE00 )
    EndIf

    If *MF_btf_17_TalkedToMuskular == .True
        BindLock  $Script_Potato .Trigger:WallPressA ~Collider:MusHome_Col $ItemList_PotatoQuest 00000000 00000001
    Else
        Bind $Script_Trigger_KnockKnock .Trigger:WallPressA ~Collider:MusHome_Col 00000001 00000000
    EndIf

    Call SetZoneEnabled ( ~Zone:CamZone_Lookout .False )
    Call SetZoneEnabled ( ~Zone:CamZone_Puzzle_1 .False )
    Call SetZoneEnabled ( ~Zone:CamZone_Puzzle_2 .False )
    Bind $Script_GogglesCamShift .Trigger:WallPressA ~Collider:GogglesCol 00000001 00000000
    Return
End
}

#new:Script $Script_ResolvePuzzle {

    % This is a sin. I'm gonna get punished somewhere down the line for sure.
If *MapFlag[09] == .True
    If *MapFlag[0A] == .True
        If *MapFlag[0B] == .True
            If *MapFlag[0C] == .True 
                If *MapFlag[0D] == .True
                    If *MapFlag[0E] == .True
                        If *MapFlag[0F] == .True
                            If *MapFlag[10] == .True
                                If *MapFlag[11] == .True
                                    Set *MF_btf_17_CubePuzzleSolved .True
                                    Call ModifyColliderFlags ( 00000000 ~Collider:PuzzleWallCol 7FFFFE00 )
                                    Call DisablePlayerInput ( .True )
                                    Call SetZoneEnabled ( ~Zone:CamZone_Puzzle_1 .True )
                                    Wait 8`

                                    Call GetModelCenter( ~Model:PuzzleCube_5_ON)
                                    Call PlayerMoveTo ( *Var[0] *Var[2] 30` )
                                    Wait 28`
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call PlaySound		( 00000010 )
                                    Wait 16`

                                    Call GetModelCenter( ~Model:PuzzleCube_2_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call GetModelCenter( ~Model:PuzzleCube_4_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call GetModelCenter( ~Model:PuzzleCube_6_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call GetModelCenter( ~Model:PuzzleCube_8_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call PlaySound		( 00000010 )
                                    Wait 16`

                                    Call GetModelCenter( ~Model:PuzzleCube_1_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call GetModelCenter( ~Model:PuzzleCube_3_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call GetModelCenter( ~Model:PuzzleCube_7_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call GetModelCenter( ~Model:PuzzleCube_9_ON)
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call PlaySound		( 00000010 )
                                    Wait 16`

                                    Call SetZoneEnabled ( ~Zone:CamZone_Puzzle_1 .False )
                                    Call SetZoneEnabled ( ~Zone:CamZone_Puzzle_2 .True )
                                    Call GetPlayerPos ( *Var[0] *Var[1] *Var[2] )
                                    Call PlayerMoveTo ( *Var[0] *Var[2] 1` )
                                    Wait 60`

                                    Call EnableModel( ~Model:Cubes_PostPuzzle_OFF .False )
                                    Call EnableModel( ~Model:Cubes_PostPuzzle_ON .True )
                                    Call GetModelCenter ( ~Model:Cubes_PostPuzzle_ON )
                                    Set *Var[2] = *Var[2] - 50`
                                    Set *Var[0] = *Var[0] + 50`
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Set *Var[2] = *Var[2] + 100`
                                    Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
                                    Call PlaySound		( 00000010 )
                                    Wait 30`

                                    Call SetZoneEnabled ( ~Zone:CamZone_Puzzle_2 .False )
                                    Call GetPlayerPos ( *Var[0] *Var[1] *Var[2] )
                                    Call PlayerMoveTo ( *Var[0] *Var[2] 1` )
                                    Wait 48`

                                    Call DisablePlayerInput ( .False )
                                EndIf
                            EndIf
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
EndIf

Return
End
}

#new:Script $Script_Trigger_Puzzle1 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_1
    Exec $Script_SubTrigger_PuzzleCube_2
    Exec $Script_SubTrigger_PuzzleCube_4

Exec $Script_ResolvePuzzle
Wait 1`

Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_1 {

    If *MapFlag[09] == .False % Cube 1
        Set *MapFlag[09] .True
        Call EnableModel ( ~Model:PuzzleCube_1_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_1_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_1_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[09] .False
        Call EnableModel ( ~Model:PuzzleCube_1_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_1_OFF .True )
    EndIf

Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_2 {

    If *MapFlag[0A] == .False % Cube 2
        Set *MapFlag[0A] .True
        Call EnableModel ( ~Model:PuzzleCube_2_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_2_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_2_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[0A] .False
        Call EnableModel ( ~Model:PuzzleCube_2_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_2_OFF .True )
    EndIf

Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_3 {

    If *MapFlag[0B] == .False % Cube 3
        Set *MapFlag[0B] .True
        Call EnableModel ( ~Model:PuzzleCube_3_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_3_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_3_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[0B] .False
        Call EnableModel ( ~Model:PuzzleCube_3_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_3_OFF .True )
    EndIf
    
Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_4 {

    If *MapFlag[0C] == .False % Cube 4
        Set *MapFlag[0C] .True
        Call EnableModel ( ~Model:PuzzleCube_4_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_4_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_4_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[0C] .False
        Call EnableModel ( ~Model:PuzzleCube_4_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_4_OFF .True )
    EndIf
    
Return
End
}  

#new:Script $Script_SubTrigger_PuzzleCube_5 {

    If *MapFlag[0D] == .False % Cube 5
        Set *MapFlag[0D] .True
        Call EnableModel ( ~Model:PuzzleCube_5_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_5_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_5_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[0D] .False
        Call EnableModel ( ~Model:PuzzleCube_5_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_5_OFF .True )
    EndIf
    
Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_6 {

    If *MapFlag[0E] == .False % Cube 6
        Set *MapFlag[0E] .True
        Call EnableModel ( ~Model:PuzzleCube_6_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_6_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_6_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[0E] .False
        Call EnableModel ( ~Model:PuzzleCube_6_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_6_OFF .True )
    EndIf
    
Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_7 {

    If *MapFlag[0F] == .False % Cube 7
        Set *MapFlag[0F] .True
        Call EnableModel ( ~Model:PuzzleCube_7_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_7_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_7_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[0F] .False
        Call EnableModel ( ~Model:PuzzleCube_7_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_7_OFF .True )
    EndIf
    
Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_8 {

    If *MapFlag[10] == .False % Cube 8
        Set *MapFlag[10] .True
        Call EnableModel ( ~Model:PuzzleCube_8_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_8_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_8_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[10] .False
        Call EnableModel ( ~Model:PuzzleCube_8_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_8_OFF .True )
    EndIf
    
Return
End
}

#new:Script $Script_SubTrigger_PuzzleCube_9 {

    If *MapFlag[11] == .False % Cube 9
        Set *MapFlag[11] .True
        Call EnableModel ( ~Model:PuzzleCube_9_ON .True )
        Call EnableModel ( ~Model:PuzzleCube_9_OFF .False )
        Call GetModelCenter ( ~Model:PuzzleCube_9_ON )
        Call PlayEffect ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 20` 0 0 0 0 0 0 0 0 )
        Call	PlaySound		( 0000006E )
    Else
        Set *MapFlag[11] .False
        Call EnableModel ( ~Model:PuzzleCube_9_ON .False )
        Call EnableModel ( ~Model:PuzzleCube_9_OFF .True )
    EndIf
    
Return
End
}

#new:Script $Script_Trigger_Puzzle2 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_1
    Exec $Script_SubTrigger_PuzzleCube_2
    Exec $Script_SubTrigger_PuzzleCube_3
    Exec $Script_SubTrigger_PuzzleCube_5

Exec $Script_ResolvePuzzle
Wait 1`

Return
End
}

#new:Script $Script_Trigger_Puzzle3 {
    
    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_2
    Exec $Script_SubTrigger_PuzzleCube_3
    Exec $Script_SubTrigger_PuzzleCube_6
    
Exec $Script_ResolvePuzzle
Wait 1`
    
Return
End
}

#new:Script $Script_Trigger_Puzzle4 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_1
    Exec $Script_SubTrigger_PuzzleCube_4
    Exec $Script_SubTrigger_PuzzleCube_5
    Exec $Script_SubTrigger_PuzzleCube_7

Exec $Script_ResolvePuzzle    
Wait 1`

Return
End
}

#new:Script $Script_Trigger_Puzzle5 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_2
    Exec $Script_SubTrigger_PuzzleCube_4
    Exec $Script_SubTrigger_PuzzleCube_5
    Exec $Script_SubTrigger_PuzzleCube_6
    Exec $Script_SubTrigger_PuzzleCube_8

    Exec $Script_ResolvePuzzle
    Wait 1`
    
Return
End
}

#new:Script $Script_Trigger_Puzzle6 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_3
    Exec $Script_SubTrigger_PuzzleCube_5
    Exec $Script_SubTrigger_PuzzleCube_6
    Exec $Script_SubTrigger_PuzzleCube_9

    Exec $Script_ResolvePuzzle
    Wait 1`
    
Return
End
}

#new:Script $Script_Trigger_Puzzle7 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_4
    Exec $Script_SubTrigger_PuzzleCube_7
    Exec $Script_SubTrigger_PuzzleCube_8

    Exec $Script_ResolvePuzzle
    Wait 1`
    
Return
End
}

#new:Script $Script_Trigger_Puzzle8 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_5
    Exec $Script_SubTrigger_PuzzleCube_7
    Exec $Script_SubTrigger_PuzzleCube_8
    Exec $Script_SubTrigger_PuzzleCube_9

    Exec $Script_ResolvePuzzle
    Wait 1`
    
Return
End
}

#new:Script $Script_Trigger_Puzzle9 {

    If *MF_btf_17_CubePuzzleSolved == .True
        Return % Just skip the entire script when the puzzle has been solved
    EndIf

    Exec $Script_SubTrigger_PuzzleCube_6
    Exec $Script_SubTrigger_PuzzleCube_8
    Exec $Script_SubTrigger_PuzzleCube_9

    Exec $Script_ResolvePuzzle
    Wait 1`
    
Return
End
}

#new:Script $Script_GogglesCamShift {

Call DisablePlayerInput ( .True )
Call SetZoneEnabled ( ~Zone:CamZone_Lookout .True )
Call ModifyColliderFlags ( 00000000 ~Collider:GogglesCol 7FFFFE00 )
Call GetPlayerPos ( *Debug[0] *Debug[1] *Debug[2] )
Call PlayerMoveTo ( 45 90 30` ) % Idk how else to trick the game into updating cam zones and I'm not spending what time we have left debugging this
Wait 100`
Call SetZoneEnabled ( ~Zone:CamZone_Lookout .False )
Call PlayerMoveTo ( 15 A5 30` ) % And Update once more to shift back
Wait 20`
Call ModifyColliderFlags ( 00000001 ~Collider:GogglesCol 7FFFFE00 )
Call DisablePlayerInput ( .False )
Return
End
}

#new:Script $Script_Trigger_START {

    If *MapFlag[0] == .True
    Exec $Script_Cube_1To4_ON
    EndIf
    
    If *MapFlag[1] == .True
    Exec $Script_Cube_5To8_ON
    EndIf


    Set *MapFlag[0] .False % 1-4
    Set *MapFlag[1] .False % 5-8

    Return
    End
}

#new:Script $Script_Trigger_0 {

    If *MF_btf_17_CubePuzzleSolved == .False
        Return % Only need to put this here due to the temp wall collider
    EndIf

    If *MapFlag[0] == .False
    Exec $Script_Cube_1To4_ON
    EndIf
    
    If *MapFlag[1] == .False
    Exec $Script_Cube_5To8_ON
    EndIf

    If *MapFlag[2] == .True
    Exec $Script_Cube_9To12_ON
    EndIf

    Set *MapFlag[0] .True % 1-4
    Set *MapFlag[1] .True % 5-8
    Set *MapFlag[2] .False % 9-12

    Return
    End
}

#new:Script $Script_Trigger_1 {


    If *MapFlag[2] == .False
    Exec $Script_Cube_9To12_ON
    EndIf

    If *MapFlag[3] == .True
    Exec $Script_Cube_Big_1_ON
    EndIf

    Set *MapFlag[2] .True % 9-12
    Set *MapFlag[3] .False % Big_1

    Return
    End
}

#new:Script $Script_Trigger_2 {

    If *MapFlag[3] == .False
    Exec $Script_Cube_Big_1_ON
    EndIf

    If *MapFlag[4] == .True
    Exec $Script_Cube_13To16_ON
    EndIf

    Set *MapFlag[3] .True % Big_1
    Set *MapFlag[4] .False % 13-16


    Return
    End
}

#new:Script $Script_Trigger_3 {

    If *MapFlag[0] == .False
    Exec $Script_Cube_1To4_ON
    EndIf

    If *MapFlag[4] == .False
    Exec $Script_Cube_13To16_ON
    EndIf

    If *MapFlag[5] == .True
    Exec $Script_Cube_17To20_ON
    EndIf


    Set *MapFlag[0] .True % 1-4
    Set *MapFlag[4] .True % 13-16
    Set *MapFlag[5] .False % 17-20

    Return
    End
}

#new:Script $Script_Trigger_4 {

    If *MapFlag[1] == .False
    Exec $Script_Cube_5To8_ON
    EndIf

    If *MapFlag[5] == .False
    Exec $Script_Cube_17To20_ON
    EndIf

    If *MapFlag[0] == .True
    Exec $Script_Cube_1To4_ON
    EndIf

    If *MapFlag[6] == .True
    Exec $Script_Cube_Big_2_ON
    EndIf


    Set *MapFlag[1] .True % 5-8
    Set *MapFlag[5] .True % 17-20
    Set *MapFlag[0] .False % 1-4
    Set *MapFlag[6] .False % Big_2

    Return
    End
}

#new:Script $Script_Trigger_5 {

    If *MapFlag[2] == .False
    Exec $Script_Cube_9To12_ON
    EndIf

    If *MapFlag[6] == .False
    Exec $Script_Cube_Big_2_ON
    EndIf

    If *MapFlag[1] == .True
    Exec $Script_Cube_5To8_ON
    EndIf

    If *MapFlag[7] == .True
    Exec $Script_Cube_21To24_ON
    EndIf

    Set *MapFlag[2] .True % 9-12
    Set *MapFlag[6] .True % Big_2
    Set *MapFlag[1] .False % 5-8
    Set *MapFlag[7] .False % 21-24

    Return
    End
}

#new:Script $Script_Trigger_6 {

    If *MapFlag[3] == .False
    Exec $Script_Cube_Big_1_ON
    EndIf

    If *MapFlag[7] == .False
    Exec $Script_Cube_21To24_ON
    EndIf

    If *MapFlag[2] == .True
    Exec $Script_Cube_9To12_ON
    EndIf

    Set *MapFlag[3] .True % Big_1
    Set *MapFlag[7] .True % 21-24
    Set *MapFlag[2] .False % 9-12

    Return
    End
}

#new:Script $Script_Trigger_7 {

    If *MapFlag[4] == .False
    Exec $Script_Cube_13To16_ON
    EndIf

    If *MapFlag[3] == .True
    Exec $Script_Cube_Big_1_ON
    EndIf

    Set *MapFlag[4] .True % 13-16
    Set *MapFlag[3] .False % Big_1

    Return
    End
}

#new:Script $Script_Trigger_8 {

    If *MapFlag[5] == .False
    Exec $Script_Cube_17To20_ON
    EndIf

    If *MapFlag[4] == .True
    Exec $Script_Cube_13To16_ON
    EndIf

    Set *MapFlag[5] .True % 17-20
    Set *MapFlag[4] .False % 13-16

    Return
    End
}

#new:Script $Script_Trigger_9 {

    If *MapFlag[6] == .False
    Exec $Script_Cube_Big_2_ON
    EndIf

    If *MapFlag[7] == .False
    Exec $Script_Cube_21To24_ON
    EndIf

    If *MapFlag[5] == .True
    Exec $Script_Cube_17To20_ON
    EndIf

    Set *MapFlag[6] .True % Big_2
    Set *MapFlag[7] .True % 21-24
    Set *MapFlag[5] .False % 17-20

    Return
    End
}

#new:Script $Script_Trigger_END {

    If *MapFlag[6] == .True
    Exec $Script_Cube_Big_2_ON
    EndIf
    
    If *MapFlag[7] == .True
    Exec $Script_Cube_21To24_ON
    EndIf

    Set *MapFlag[6] .False % Big_2
    Set *MapFlag[7] .False % 21-24

    Return
    End
}

#new:Script $Script_ToggleCubeDoor {

    If *MapFlag[8] == .False
        Call MakeLerp ( 0 120` 12` .Easing:Linear )
        Set *MapFlag[8] .True
    Else
        Call MakeLerp ( 120` 0 12` .Easing:Linear )
        Set *MapFlag[8] .False
    EndIf

    Loop
        Call UpdateLerp()
        Mul *Var[0] -1`
        Call RotateModel ( ~Model:MuskularHomeCube_Door *Var[0] 0 0 1 )

        Wait 1`
        If *Var[1] == 0
            BreakLoop
        EndIf
        
    EndLoop

Return
End
}

#new:Script $Script_Cube_1To4_ON { % Heyyyyy guys how ya doinnnnn. Don't mind this chunk of code below ty

    If *MapFlag[0] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

    Loop
        Call UpdateLerp ()

        % Cube 1 | 300 / -150 / 250
        Set *Var[3] *Var[0]
        Mul *Var[3] 3`
        Set *Var[4] *Var[0]
        MulF *Var[4] *Fixed[-1.500000]
        Set *Var[5] *Var[0]
        MulF *Var[5] *Fixed[2.500000]
        Call TranslateModel ( ~Model:CosmicCube_1 *Var[3] *Var[4] *Var[5] )

        % Cube 2 | -50 / -200 / 400
        Set *Var[3] *Var[0]
        MulF *Var[3] *Fixed[-0.500000]
        Set *Var[4] *Var[0]
        Mul *Var[4] -2`
        Set *Var[5] *Var[0]
        Mul *Var[5] 4`
        Call TranslateModel ( ~Model:CosmicCube_2 *Var[3] *Var[4] *Var[5] )

        % Cube 3 | -150 / -250 / 150
        Set *Var[3] *Var[0]
        MulF *Var[3] *Fixed[-1.500000]
        Set *Var[4] *Var[0]
        MulF *Var[4] *Fixed[-2.500000]
        Set *Var[5] *Var[0]
        MulF *Var[5] *Fixed[1.500000]
        Call TranslateModel ( ~Model:CosmicCube_3 *Var[3] *Var[4] *Var[5] )

        % Cube 4 | 50 / 50 / -200
        Set *Var[3] *Var[0]
        MulF *Var[3] *Fixed[0.500000]
        Set *Var[4] *Var[0]
        MulF *Var[4] *Fixed[0.500000]
        Set *Var[5] *Var[0]
        Mul *Var[5] -2`
        Call TranslateModel ( ~Model:CosmicCube_4 *Var[3] *Var[4] *Var[5] )

        Set *Var[2] *Var[0]
        MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
        Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once

        Call RotateModel ( ~Model:CosmicCube_1 *Var[2] 1 1 1 )
        Call RotateModel ( ~Model:CosmicCube_2 *Var[2] 1 1 1 )
        Call RotateModel ( ~Model:CosmicCube_3 *Var[2] 1 1 1 )
        Call RotateModel ( ~Model:CosmicCube_4 *Var[2] 1 1 1 )

        Set *Debug[0] *Var[2]
        Set *Debug[1] *Var[0]
        Wait 1`
        If *Var[1] == 0
            BreakLoop
        EndIf
    EndLoop 

Return
End
}

#new:Script $Script_Cube_5To8_ON {

    If *MapFlag[1] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop
            Call UpdateLerp ()
    
            % Cube 5 | -50 / 150 / 150
            Set *Var[3] *Var[0]
            MulF *Var[3] *Fixed[-0.500000]
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[1.500000]
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[1.500000]
            Call TranslateModel ( ~Model:CosmicCube_5 *Var[3] *Var[4] *Var[5] )
    
            % Cube 6 | 200 / -250 / 50
            Set *Var[3] *Var[0]
            Mul *Var[3] 2`
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[-2.500000]
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[0.500000]
            Call TranslateModel ( ~Model:CosmicCube_6 *Var[3] *Var[4] *Var[5] )
    
            % Cube 7 | 0 / -150 / -200
            Set *Var[3] 0
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[-1.500000]
            Set *Var[5] *Var[0]
            Mul *Var[5] -2`
            Call TranslateModel ( ~Model:CosmicCube_7 *Var[3] *Var[4] *Var[5] )
    
            % Cube 8 | 100 / 250 / -100
            Set *Var[3] *Var[0]
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[2.500000]
            Set *Var[5] *Var[0]
            Mul *Var[5] -1`
            Call TranslateModel ( ~Model:CosmicCube_8 *Var[3] *Var[4] *Var[5] )
    
            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once
    
            Call RotateModel ( ~Model:CosmicCube_5 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_6 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_7 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_8 *Var[2] 1 1 1 )
    
            Set *Debug[0] *Var[2]
            Set *Debug[1] *Var[0]
            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 

    Return
    End
}

#new:Script $Script_Cube_9To12_ON {

    If *MapFlag[2] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop
            Call UpdateLerp ()
    
            % Cube 9 | -100 / -150 / 100
            Set *Var[3] *Var[0]
            Mul *Var[3] -1
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[-1.500000]
            Set *Var[5] *Var[0]
            %MulF *Var[5] *Fixed[1.500000]
            Call TranslateModel ( ~Model:CosmicCube_9 *Var[3] *Var[4] *Var[5] )
    
            % Cube 10 | -200 / -100 / 50
            Set *Var[3] *Var[0]
            Mul *Var[3] -2`
            Set *Var[4] *Var[0]
            Mul *Var[4] -1`
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[0.500000]
            Call TranslateModel ( ~Model:CosmicCube_10 *Var[3] *Var[4] *Var[5] )
    
            % Cube 11 | -100 / -200 / -150
            Set *Var[3] *Var[0]
            Mul *Var[3] -1`
            Set *Var[4] *Var[0]
            Mul *Var[4] -2`
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[-1.500000]
            Call TranslateModel ( ~Model:CosmicCube_11 *Var[3] *Var[4] *Var[5] )
    
            % Cube 12 | 0 / 250 / 150
            Set *Var[3] 0
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[2.500000]
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[1.500000]
            Call TranslateModel ( ~Model:CosmicCube_12 *Var[3] *Var[4] *Var[5] )
    
            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once
    
            Call RotateModel ( ~Model:CosmicCube_9 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_10 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_11 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_12 *Var[2] 1 1 1 )
    
            Set *Debug[0] *Var[2]
            Set *Debug[1] *Var[0]
            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 

    Return
    End
}

#new:Script $Script_Cube_13To16_ON {

    If *MapFlag[4] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop
            Call UpdateLerp ()
    
            % Cube 13 | -200 / 150 / 50
            Set *Var[3] *Var[0]
            Mul *Var[3] -2`
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[1.500000]
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[0.500000]
            Call TranslateModel ( ~Model:CosmicCube_13 *Var[3] *Var[4] *Var[5] )
    
            % Cube 14 | -100 / -300 / -150
            Set *Var[3] *Var[0]
            Mul *Var[3] -1`
            Set *Var[4] *Var[0]
            Mul *Var[4] -3`
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[-1.500000]
            Call TranslateModel ( ~Model:CosmicCube_14 *Var[3] *Var[4] *Var[5] )
    
            % Cube 15 | -100 / -200 / 100
            Set *Var[3] *Var[0]
            Mul *Var[3] -1`
            Set *Var[4] *Var[0]
            Mul *Var[4] -2`
            Set *Var[5] *Var[0]
            %MulF *Var[5] *Fixed[-1.500000]
            Call TranslateModel ( ~Model:CosmicCube_15 *Var[3] *Var[4] *Var[5] )
    
            % Cube 16 | -50 / 150 / 0
            Set *Var[3] *Var[0]
            MulF *Var[3] *Fixed[-0.500000]
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[1.500000]
            Set *Var[5] 0
            %MulF *Var[5] *Fixed[1.500000]
            Call TranslateModel ( ~Model:CosmicCube_16 *Var[3] *Var[4] *Var[5] )
    
            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once
    
            Call RotateModel ( ~Model:CosmicCube_13 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_14 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_15 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_16 *Var[2] 1 1 1 )
    
            Set *Debug[0] *Var[2]
            Set *Debug[1] *Var[0]
            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 

    Return
    End
}

#new:Script $Script_Cube_17To20_ON {

    If *MapFlag[5] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop
            Call UpdateLerp ()
    
            % Cube 17 | 150 / -100 / 100
            Set *Var[3] *Var[0]
            MulF *Var[3] *Fixed[1.500000]
            Set *Var[4] *Var[0]
            Mul *Var[4] -1`
            Set *Var[5] *Var[0]
            %MulF *Var[5] *Fixed[1.500000]
            Call TranslateModel ( ~Model:CosmicCube_17 *Var[3] *Var[4] *Var[5] )
    
            % Cube 18 | -100 / 50 / 0
            Set *Var[3] *Var[0]
            Mul *Var[3] -1`
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[0.500000]
            Set *Var[5] 0
            %MulF *Var[5] *Fixed[0.500000]
            Call TranslateModel ( ~Model:CosmicCube_18 *Var[3] *Var[4] *Var[5] )
    
            % Cube 19 | 50 / 100 / 0
            Set *Var[3] *Var[0]
            MulF *Var[3] *Fixed[0.500000]
            Set *Var[4] *Var[0]
            %Mul *Var[4] -2`
            Set *Var[5] 0
            %MulF *Var[5] *Fixed[-1.500000]
            Call TranslateModel ( ~Model:CosmicCube_19 *Var[3] *Var[4] *Var[5] )
    
            % Cube 20 | -100 / -200 / -50
            Set *Var[3] *Var[0]
            Mul *Var[3] -1`
            Set *Var[4] *Var[0]
            Mul *Var[4] -2`
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[-0.500000]
            Call TranslateModel ( ~Model:CosmicCube_20 *Var[3] *Var[4] *Var[5] )
    
            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once
    
            Call RotateModel ( ~Model:CosmicCube_17 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_18 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_19 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_20 *Var[2] 1 1 1 )
    
            Set *Debug[0] *Var[2]
            Set *Debug[1] *Var[0]
            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 

    Return
    End
}

#new:Script $Script_Cube_21To24_ON {

    If *MapFlag[7] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop
            Call UpdateLerp ()
    
            % Cube 21 | -50 / -150 / 150
            Set *Var[3] *Var[0]
            MulF *Var[3] *Fixed[-0.500000]
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[-1.500000]
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[1.500000]
            Call TranslateModel ( ~Model:CosmicCube_21 *Var[3] *Var[4] *Var[5] )
    
            % Cube 22 | 50 / 50 / 250
            Set *Var[3] *Var[0]
            MulF *Var[3] *Fixed[0.500000]
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[0.500000]
            Set *Var[5] *Var[0]
            MulF *Var[5] *Fixed[2.500000]
            Call TranslateModel ( ~Model:CosmicCube_22 *Var[3] *Var[4] *Var[5] )
    
            % Cube 23 | -100 / 0 / -100
            Set *Var[3] *Var[0]
            Mul *Var[3] -1`
            Set *Var[4] 0
            %Mul *Var[4] -2`
            Set *Var[5] *Var[0]
            Mul *Var[5] -1`
            Call TranslateModel ( ~Model:CosmicCube_23 *Var[3] *Var[4] *Var[5] )
    
            % Cube 24 | -200 / -150 / 200
            Set *Var[3] *Var[0]
            Mul *Var[3] -2`
            Set *Var[4] *Var[0]
            MulF *Var[4] *Fixed[-1.500000]
            Set *Var[5] *Var[0]
            Mul *Var[5] 2`
            Call TranslateModel ( ~Model:CosmicCube_24 *Var[3] *Var[4] *Var[5] )
    
            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once
    
            Call RotateModel ( ~Model:CosmicCube_21 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_22 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_23 *Var[2] 1 1 1 )
            Call RotateModel ( ~Model:CosmicCube_24 *Var[2] 1 1 1 )
    
            Set *Debug[0] *Var[2]
            Set *Debug[1] *Var[0]
            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 

    Return
    End
}

#new:Script $Script_Cube_Big_1_ON {

    If *MapFlag[3] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop 
            Call UpdateLerp ()

            %Big_1 0 / -400 / 0
            Set *Var[3] *Var[0]
            Mul *Var[3] -4`
            Call TranslateModel ( ~Model:BigCosmicCube_1 0 *Var[3] 0 )

            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once

            Call RotateModel ( ~Model:BigCosmicCube_1 *Var[2] 0 1 0 )

            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 
    Return
End
}

#new:Script $Script_Cube_Big_2_ON {

    If *MapFlag[6] == .False % Due to scripts starting to execute 1 Frame after being called we invert the logic here
        Call MakeLerp ( 100` 0 8` .Easing:Linear )
    Else
        Call MakeLerp ( 0 100` 8` .Easing:Linear )
    EndIf

        Loop 
            Call UpdateLerp ()

            %Big_2 0 / 300 / 0
            Set *Var[3] *Var[0]
            Mul *Var[3] 3`
            Call TranslateModel ( ~Model:BigCosmicCube_2 0 *Var[3] 0 )

            Set *Var[2] *Var[0]
            MulF *Var[2] *Fixed[0.900000] % Set final result to 90 because angle math
            Mul *Var[2] 4` % multiply by 4 as we are rotating on all 3 axis at once

            Call RotateModel ( ~Model:BigCosmicCube_2 *Var[2] 0 1 0 )

            Wait 1`
            If *Var[1] == 0
                BreakLoop
            EndIf
        EndLoop 
    Return
End
}

#new:ItemList $ItemList_PotatoQuest
{
	.Item:IcedPotato
	00000000
}

#new:Script $Script_Trigger_KnockKnock %ty for the sick script name, blook    - Den
{
    Call DisablePlayerInput ( .True )
    ExecWait $Script_ToggleCubeDoor
    Call DisablePartnerAI ( 00000000 )
    If *MF_btf_17_TalkedToMuskular == .True

    Else
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F003E )
        Call SpeakToNpc ( .Npc:Partner 00040006 00040001 00000000 .NpcID:Muskular 002F003F )
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F0040 )
        Wait 15`
        Call GetNpcPos ( .NpcID:Muskular *VarA *VarB *VarC )
        Sub *VarA 25`
        Add *VarB 80`
        Call NpcFlyTo ( .NpcID:Muskular *VarA *VarB *VarC 30` 20` .Easing:Linear )
        Call SetPlayerAnimation ( 0001002A )
        Wait 10`
        Thread
            Call GetPartnerPos ( *VarD *VarE *VarF )
            Wait 15`
            Sub *VarD 60`
            Call NpcFlyTo ( .Npc:Partner *VarD *VarE *VarF 15` 0` .Easing:Linear )
            Call NpcFaceNpc ( .Npc:Partner .NpcID:Muskular 1` )
        EndThread
        Call GetPlayerPos ( *Var1 *Var2 *Var3 )
        Thread
            Call PlaySound ( 00000262 )
        EndThread
        Call ShowEmote ( 00000000 .Emote:Exclamation 0` 15` .False *Var1 *Var2 *Var3 0` )
        Call SetPlayerAnimation ( 00080016 )
        Wait 15`
        Sub *Var1 60`
        Call PlayerMoveTo ( *Var1 *Var3 15` )
        Call PlayerFaceNpc ( .NpcID:Muskular .False )
        Call GetNpcPos ( .NpcID:Muskular *VarA *VarB *VarC )
        Sub *VarA 25`
        Sub *VarB 60`
        Call NpcFlyTo ( .NpcID:Muskular *VarA *VarB *VarC 30` 20` .Easing:Linear )
        %
        %
        %
        ExecWait $Script_LetterDelivery_Muskular
        If *VarC == 00000001
            Label A
            ExecWait $Script_LetterDelivery_Muskular
            If *VarC == 00000001
                Goto A
            Else
                Goto B
            EndIf
        EndIf
        Label B
        %
        %
        %
        Call InterpNpcYaw ( .NpcID:Muskular -107` 5` )
        Call SetNpcAnimation ( .NpcID:Muskular 00150005 )
        Wait 60`
        Call ShowMessageAtScreenPos ( 002F0045 000000A0 00000028 )
        Wait 15`
        Call InterpNpcYaw ( .NpcID:Muskular -207` 5` )
        Call SetNpcAnimation ( .NpcID:Muskular 00150001 )
        Wait 45`
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F0046 )
        Call SpeakToNpc ( .Npc:Partner 00040006 00040001 00000000 .NpcID:Muskular 002F0047 )%We will not disappoint!
        Wait 5`
        Call PlayerFaceNpc ( .Npc:Partner .False )
        Wait 10`
        Call SetPlayerAnimation ( 00010029 )
        Wait 10`
        Call PlayerFaceNpc ( .NpcID:Muskular .False )
        Wait 15`
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F004B ) %Alright, I will now provide...
        Call ShowGotItem ( .Item:Letter01 .True 00000000 )
        Call AddKeyItem ( .Item:Letter01 )
        Call ShowGotItem ( .Item:Letter02 .True 00000000 )
        Call AddKeyItem ( .Item:Letter02 )
        Call ShowGotItem ( .Item:Letter03 .True 00000000 )
        Call AddKeyItem ( .Item:Letter03 )
        Call ShowGotItem ( .Item:Letter04 .True 00000000 )
        Call AddKeyItem ( .Item:Letter04 )
        Call ShowGotItem ( .Item:Letter05 .True 00000000 )
        Call AddKeyItem ( .Item:Letter05 )
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F004A ) %Off you two go...
        Call GetNpcPos ( .NpcID:Muskular *VarA *VarB *VarC )
        Add *VarA 50`
        Add *VarB 40`
        Call NpcFlyTo ( .NpcID:Muskular *VarA *VarB *VarC 30` 20` .Easing:Linear )
        Wait 10`
        Call GetNpcPos ( .NpcID:Muskular *Var1 *Var2 *Var3 )
        Thread
            Call PlaySound ( 00000262 )
        EndThread
        Call ShowEmote ( 00000000 .Emote:Exclamation 0` 15` .True *Var1 *Var2 *Var3 0` )
        Wait 10`
        Call NpcFacePlayer ( .NpcID:Muskular 15` )
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F004C ) %Oh! One more thing...
        Wait 10`
        Call SpeakToNpc ( .Npc:Partner 00040006 00040001 00000000 .NpcID:Muskular 002F004D )%Of course!
        Wait 5`
        Call GetNpcPos ( .NpcID:Muskular *VarD *VarE *VarF )
        Sub *VarD 65`
        Sub *VarE 40`
        Call NpcFlyTo ( .Npc:Partner *VarD *VarE *VarF 30` 0` .Easing:Linear )
        Wait 10`
        Call InterpNpcYaw ( .NpcID:Muskular -207` 10` )
        Wait 10`
        Call InterpNpcYaw ( .NpcID:Muskular -107` 10` )
        Wait 10`
        Call InterpNpcYaw ( .NpcID:Muskular -207` 10` )
        Call SetNpcAnimation ( .NpcID:Muskular 00150003 )
        Wait 10`
        Call InterpNpcYaw ( .NpcID:Muskular -107` 10` )
        Call GetNpcPos ( .NpcID:Muskular *VarD *VarE *VarF )
        Sub *VarD 3`
        Add *VarE 23`
        Add *VarF 5`
        Call  PlayEffect    ( ~FX:Sparkles:Star *VarD *VarE *VarF 25` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call PlaySound ( 00000064 )
        Wait 5`
        %
        % Super Block Stuff Start
        %
        24:  Call  MakeEntity    ( .Entity:SuperBlock ~Vec4d:Entity80241A9C 80000000 )
        48:  Set   *MapVar[0]  *Var0
        Set *MapVar[1] *Var0
        Set *Var0 *MapVar[1]
        Call SetEntityHideMode2 ()
        68:  Call  AssignScript  ( $Script_802415F8 )
        ExecWait $Script_802415F8
        Call $Function_UpgradeParakarry
        %
        % Super Block Stuff End
        %
        Call SetNpcAnimation ( .NpcID:Muskular 00150001 )
        Call GetNpcPos ( .Npc:Partner *VarD *VarE *VarF )
        Add *VarE 20`
        Add *VarF 5`
        Call  PlayEffect    ( ~FX:Sparkles:Star *VarD *VarE *VarF 25` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call PlaySound ( 00000064 )
        Wait 15`
        Call ShowMessageAtScreenPos ( 002F004F 000000A0 00000028 )
        Wait 30`
        Call SpeakToPlayer ( .NpcID:Muskular 00150002 00150001 00000000 002F004E )%Off with you two...
        Call GetNpcPos ( .NpcID:Muskular *VarA *VarB *VarC )
        Sub *VarB 60`
        Call NpcFlyTo ( .NpcID:Muskular *VarA *VarB *VarC 30` 20` .Easing:Linear )
        ExecWait $Script_ToggleCubeDoor
        Set *MF_btf_17_TalkedToMuskular .True
        Unbind 
        BindLock  $Script_Potato .Trigger:WallPressA ~Collider:MusHome_Col $ItemList_PotatoQuest 00000000 00000001
    EndIf
    Call EnablePartnerAI ()
    Call DisablePlayerInput ( .False )
    Return
    End
}

#new:Function $Function_802430D8
{
    0:  LA        V1, 8010EBB0
    8:  SW        R0, 84 (A0)
    C:  LB        V0, 0 (V1)
   10:  BEQ       V0, R0, .o28
   14:  LI        V0, 3
   18:  LB        V1, 3 (V1)
   1C:  BNE       V1, V0, .o28
   20:  LI        V0, 1
   24:  SW        V0, 84 (A0)
        .o28
   28:  JR        RA
   2C:  LI        V0, 2
}

#new:Function $Function_802423D0
{
    0:  LA        V1, 8009A650
    8:  LW        V0, 0 (V1)
    C:  ORI       V0, V0, 40
   10:  SW        V0, 0 (V1)
   14:  JR        RA
   18:  LI        V0, 2
}

#new:Function $Function_80242850
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  JAL       ~Func:get_entity_by_index
   28:  COPY      A0, V0
   2C:  LW        S0, 0 (S0)
   30:  LWC1      F4, 4C (V0)
   34:  LIF       F0, 12.5
   3C:  LIF       F2, 0.7
   48:  SW        R0, 14 (SP)
   4C:  ADD.S     F4, F4, F0
   50:  SWC1      F2, 10 (SP)
   54:  LW        A1, 48 (V0)
   58:  LW        A3, 50 (V0)
   5C:  MFC1      A2, F4
   60:  JAL       ~Func:playFX_52
   64:  CLEAR     A0
   68:  COPY      A0, S1
   6C:  COPY      A1, S0
   70:  JAL       ~Func:set_variable
   74:  COPY      A2, V0
   78:  LW        RA, 20 (SP)
   7C:  LW        S1, 1C (SP)
   80:  LW        S0, 18 (SP)
   84:  LI        V0, 2
   88:  JR        RA
   8C:  ADDIU     SP, SP, 28
}

#new:Function $Function_802424A4
{
    0:  LA        V0, 8010F290
    8:  SLL       A0, A0, 3
    C:  ADDU      A0, A0, V0
   10:  LBU       V0, 14 (A0)
   14:  BEQ       V0, R0, .o3C
   18:  NOP
   1C:  LBU       V0, 15 (A0)
   20:  SLL       A0, V0, 18
   24:  SRA       V1, A0, 18
   28:  SLL       V0, A1, 10
   2C:  SRA       V0, V0, 10
   30:  SLT       V0, V0, V1
   34:  BEQ       V0, R0, .o44
   38:  NOP
        .o3C
   3C:  JR        RA
   40:  LI        V0, FFFF
        .o44
   44:  JR        RA
   48:  SRA       V0, A0, 18
}

#new:Function $Function_802424F0
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S3, 1C (SP)
    8:  COPY      S3, A0
    C:  SW        S0, 10 (SP)
   10:  LI        S0, 1
   14:  SW        S4, 20 (SP)
   18:  LI        S4, FFFF
   1C:  SW        S5, 24 (SP)
   20:  COPY      S5, S0
   24:  SW        S1, 14 (SP)
   28:  LA        S1, 8010F298
   30:  SW        RA, 28 (SP)
   34:  SW        S2, 18 (SP)
   38:  LW        V0, B4 (S3)
   3C:  COPY      V1, S4
   40:  SW        V1, 84 (S3)
   44:  NOR       V0, R0, V0
   48:  SRL       V0, V0, 1F
   4C:  SLL       S2, V0, 10
        .o50
   50:  LBU       V0, 14 (S1)
   54:  BEQL      V0, R0, .o78
   58:  ADDIU     S0, S0, 1
   5C:  COPY      A0, S0
   60:  JAL       $Function_802424A4
   64:  SRA       A1, S2, 10
   68:  BEQ       V0, S4, .o78
   6C:  ADDIU     S0, S0, 1
   70:  BEQ       R0, R0, .o84
   74:  SW        S5, 84 (S3)
        .o78
   78:  SLTI      V0, S0, C
   7C:  BNE       V0, R0, .o50
   80:  ADDIU     S1, S1, 8
        .o84
   84:  LW        RA, 28 (SP)
   88:  LW        S5, 24 (SP)
   8C:  LW        S4, 20 (SP)
   90:  LW        S3, 1C (SP)
   94:  LW        S2, 18 (SP)
   98:  LW        S1, 14 (SP)
   9C:  LW        S0, 10 (SP)
   A0:  LI        V0, 2
   A4:  JR        RA
   A8:  ADDIU     SP, SP, 30
}

#new:Function $Function_802428E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  COPY      A0, V0
   18:  LW        V1, 0 (A0)
   1C:  ORI       V1, V1, 10
   20:  SW        V1, 0 (A0)
   24:  LW        RA, 10 (SP)
   28:  LI        V0, 2
   2C:  JR        RA
   30:  ADDIU     SP, SP, 18
}

#new:Function $Function_802423EC
{
    0:  LA        V0, 8009A650
    8:  LW        V1, 0 (V0)
    C:  LI        A0, FFBF
   10:  AND       V1, V1, A0
   14:  SW        V1, 0 (V0)
   18:  JR        RA
   1C:  LI        V0, 2
}

#new:Unknown $???_80243D38
{
	00010002 00030004 00090006 00070008
}

#new:Unknown $???_80243D30
{
	001D00F0 001D00F1
}

#new:Unknown $???_80243D48
{
	001D00E0 001D00E1 001D00E2 001D00E3 001D00E4 001D00E5 001D00E6 001D00E7
	001D00E8 001D00E9 001D00EA 001D00EB 001D00EC 001D00ED 001D00EE 001D00EF
}

#new:Function $Function_8024259C
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S5, 2C (SP)
    8:  COPY      S5, A0
    C:  SW        S8, 38 (SP)
   10:  LA        S8, 8010F290
   18:  SW        RA, 3C (SP)
   1C:  SW        S7, 34 (SP)
   20:  SW        S6, 30 (SP)
   24:  SW        S4, 28 (SP)
   28:  SW        S3, 24 (SP)
   2C:  SW        S2, 20 (SP)
   30:  SW        S1, 1C (SP)
   34:  BEQ       A1, R0, .o174
   38:  SW        S0, 18 (SP)
   3C:  JAL       ~Func:heap_malloc
   40:  LI        A0, 330
   44:  COPY      S3, V0
   48:  CLEAR     S6
   4C:  COPY      S2, S6
   50:  LA        S4, $???_80243D38
   58:  COPY      S1, S3
   5C:  LW        V0, B4 (S5)
   60:  LA        V1, $???_80243D30
   68:  SW        S3, 78 (S5)
   6C:  NOR       V0, R0, V0
   70:  SRL       S7, V0, 1F
   74:  SLL       V0, S7, 2
   78:  ADDU      V0, V0, V1
   7C:  SW        V0, 10 (SP)
        .o80
   80:  LH        S0, 0 (S4)
   84:  SLL       V0, S0, 3
   88:  ADDU      V0, S8, V0
   8C:  LBU       V0, 14 (V0)
   90:  BEQL      V0, R0, .o14C
   94:  ADDIU     S2, S2, 1
   98:  SLL       V0, S0, 4
   9C:  LA        A2, 8008EF20
   A4:  ADDU      V0, V0, A2
   A8:  COPY      A0, S0
   AC:  SW        S0, 108 (S1)
   B0:  LW        V0, 0 (V0)
   B4:  COPY      A1, S7
   B8:  JAL       $Function_802424A4
   BC:  SW        V0, 84 (S1)
   C0:  COPY      A0, V0
   C4:  BLTZ      A0, .o10C
   C8:  SLL       V0, S0, 2
   CC:  LA        A2, 800F7F00
   D4:  ADDU      V0, V0, A2
   D8:  LW        V1, 0 (V0)
   DC:  LI        V0, 1
   E0:  SW        V0, 18C (S1)
   E4:  SLL       V0, A0, 2
   E8:  LA        A2, $???_80243D48
   F0:  SW        V1, 0 (S1)
   F4:  SLL       V1, S2, 3
   F8:  ADDU      V0, V0, V1
   FC:  ADDU      V0, V0, A2
  100:  LW        V0, 0 (V0)
  104:  BEQ       R0, R0, .o130
  108:  SW        V0, 294 (S1)
        .o10C
  10C:  LA        A2, 800F7F40
  114:  ADDU      V0, V0, A2
  118:  LW        V0, 0 (V0)
  11C:  SW        R0, 18C (S1)
  120:  SW        V0, 0 (S1)
  124:  LW        A2, 10 (SP)
  128:  LW        V0, 0 (A2)
  12C:  SW        V0, 294 (S1)
        .o130
  130:  SLL       V0, S0, 3
  134:  ADDU      V0, S8, V0
  138:  LB        V0, 15 (V0)
  13C:  ADDIU     S6, S6, 1
  140:  SW        V0, 210 (S1)
  144:  ADDIU     S1, S1, 4
  148:  ADDIU     S2, S2, 1
        .o14C
  14C:  SLTI      V0, S2, 8
  150:  BNE       V0, R0, .o80
  154:  ADDIU     S4, S4, 2
  158:  COPY      A0, S3
  15C:  LI        V0, 4
  160:  SW        V0, 318 (A0)
  164:  SW        S6, 324 (A0)
  168:  JAL       ~Func:create_popup_menu
  16C:  SW        R0, 328 (A0)
  170:  SW        R0, 70 (S5)
        .o174
  174:  LW        V0, 70 (S5)
  178:  LW        S3, 78 (S5)
  17C:  BNE       V0, R0, .o1A0
  180:  ADDIU     V0, V0, 1
  184:  LH        V0, 32C (S3)
  188:  BEQ       V0, R0, .o1B0
  18C:  SW        V0, 74 (S5)
  190:  JAL       ~Func:hide_popup_menu
  194:  NOP
  198:  LW        V0, 70 (S5)
  19C:  ADDIU     V0, V0, 1
        .o1A0
  1A0:  SW        V0, 70 (S5)
  1A4:  SLTI      V0, V0, F
  1A8:  BEQ       V0, R0, .o1B8
  1AC:  NOP
        .o1B0
  1B0:  BEQ       R0, R0, .o220
  1B4:  CLEAR     V0
        .o1B8
  1B8:  JAL       ~Func:destroy_popup_menu
  1BC:  NOP
  1C0:  LW        V1, 74 (S5)
  1C4:  LI        V0, FF
  1C8:  BEQ       V1, V0, .o20C
  1CC:  ADDIU     V0, V1, FFFF
  1D0:  SLL       V0, V0, 2
  1D4:  ADDU      V0, S3, V0
  1D8:  LW        V0, 108 (V0)
  1DC:  SLL       V0, V0, 4
  1E0:  LTW       V1, V0 (8008EF20)
  1EC:  LW        V0, 74 (S5)
  1F0:  ADDIU     V0, V0, FFFF
  1F4:  SLL       V0, V0, 2
  1F8:  ADDU      V0, S3, V0
  1FC:  SW        V1, 84 (S5)
  200:  LW        V0, 108 (V0)
  204:  BEQ       R0, R0, .o214
  208:  SW        V0, 88 (S5)
        .o20C
  20C:  LI        V0, FFFF
  210:  SW        V0, 84 (S5)
        .o214
  214:  JAL       ~Func:heap_free
  218:  LW        A0, 78 (S5)
  21C:  LI        V0, 2
        .o220
  220:  LW        RA, 3C (SP)
  224:  LW        S8, 38 (SP)
  228:  LW        S7, 34 (SP)
  22C:  LW        S6, 30 (SP)
  230:  LW        S5, 2C (SP)
  234:  LW        S4, 28 (SP)
  238:  LW        S3, 24 (SP)
  23C:  LW        S2, 20 (SP)
  240:  LW        S1, 1C (SP)
  244:  LW        S0, 18 (SP)
  248:  JR        RA
  24C:  ADDIU     SP, SP, 40
}

#new:Function $Function_802427EC
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  JAL       ~Func:switch_to_partner
   18:  COPY      A0, V0
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80242914
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  JAL       ~Func:get_entity_by_index
   18:  COPY      A0, V0
   1C:  LIF       F0, 1.0
   24:  LWC1      F2, 4C (V0)
   28:  SWC1      F0, 10 (SP)
   2C:  LIF       F0, 12.5
   34:  LI        V1, 4B
   38:  SW        V1, 14 (SP)
   3C:  ADD.S     F2, F2, F0
   40:  LW        A1, 48 (V0)
   44:  LW        A3, 50 (V0)
   48:  MFC1      A2, F2
   4C:  JAL       ~Func:playFX_33
   50:  LI        A0, 4
   54:  LW        RA, 18 (SP)
   58:  LI        V0, 2
   5C:  JR        RA
   60:  ADDIU     SP, SP, 20
}

#new:Function $Function_80242F08
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 18 (SP)
   10:  SW        RA, 1C (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S1)
   1C:  BEQ       A1, R0, .o60
   20:  CLEAR     S2
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  SW        V0, 84 (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       ~Func:get_variable
   3C:  COPY      A0, S1
   40:  COPY      A0, S2
   44:  LI        A1, D0
   48:  COPY      A2, A1
   4C:  COPY      A3, A1
   50:  SW        V0, 88 (S1)
   54:  SW        R0, 70 (S1)
   58:  JAL       ~Func:set_screen_overlay_color
   5C:  SW        R0, 74 (S1)
        .o60
   60:  LW        V1, 70 (S1)
   64:  LI        A0, 1
   68:  BEQ       V1, A0, .oD0
   6C:  SLTI      V0, V1, 2
   70:  BEQ       V0, R0, .o88
   74:  LI        V0, 2
   78:  BEQ       V1, R0, .o98
   7C:  LI        A1, FF
   80:  BEQ       R0, R0, .o110
   84:  NOP
        .o88
   88:  BEQ       V1, V0, .oF0
   8C:  NOP
   90:  BEQ       R0, R0, .o110
   94:  NOP
        .o98
   98:  LW        V0, 74 (S1)
   9C:  BNE       V0, A1, .oB0
   A0:  NOP
   A4:  SW        A0, 70 (S1)
   A8:  SW        R0, 78 (S1)
   AC:  LW        V0, 74 (S1)
        .oB0
   B0:  LW        V1, 84 (S1)
   B4:  ADDU      V0, V0, V1
   B8:  SW        V0, 74 (S1)
   BC:  SLTI      V0, V0, 100
   C0:  BEQL      V0, R0, .o110
   C4:  SW        A1, 74 (S1)
   C8:  BEQ       R0, R0, .o110
   CC:  NOP
        .oD0
   D0:  LW        V0, 78 (S1)
   D4:  ADDIU     V0, V0, 1
   D8:  SW        V0, 78 (S1)
   DC:  SLTI      V0, V0, 2
   E0:  BNE       V0, R0, .o110
   E4:  LI        V0, 2
   E8:  BEQ       R0, R0, .o110
   EC:  SW        V0, 70 (S1)
        .oF0
   F0:  LW        V1, 74 (S1)
   F4:  BEQL      V1, R0, .oFC
   F8:  LI        S2, 1
        .oFC
   FC:  LW        V0, 88 (S1)
  100:  SUBU      V0, V1, V0
  104:  BGEZ      V0, .o110
  108:  SW        V0, 74 (S1)
  10C:  SW        R0, 74 (S1)
        .o110
  110:  LWC1      F0, 74 (S1)
  114:  CVT.S.W   F0, F0
  118:  MFC1      A1, F0
  11C:  JAL       ~Func:set_screen_overlay_params_front
  120:  LI        A0, 1
  124:  COPY      V0, S2
  128:  LW        RA, 1C (SP)
  12C:  LW        S2, 18 (SP)
  130:  LW        S1, 14 (SP)
  134:  LW        S0, 10 (SP)
  138:  JR        RA
  13C:  ADDIU     SP, SP, 20
}

#new:Function $Function_8024240C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  JAL       ~Func:entity_upgrade_block_hide_content
   18:  COPY      A0, V0
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80242978
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  JAL       ~Func:get_npc_safe
    C:  LI        A0, FFFC
   10:  LWC1      F4, 3C (V0)
   14:  LIF       F2, 12.5
   1C:  LIF       F0, 1.0
   24:  LI        V1, 1E
   28:  SW        V1, 14 (SP)
   2C:  ADD.S     F4, F4, F2
   30:  SWC1      F0, 10 (SP)
   34:  LW        A1, 38 (V0)
   38:  LW        A3, 40 (V0)
   3C:  MFC1      A2, F4
   40:  JAL       ~Func:playFX_33
   44:  LI        A0, 9
   48:  LW        RA, 18 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80243048
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  JAL       ~Func:get_npc_safe
    C:  LI        A0, FFFC
   10:  LIF       F0, 30.0
   18:  LWC1      F2, 3C (V0)
   1C:  ADD.S     F2, F2, F0
   20:  SWC1      F0, 10 (SP)
   24:  LW        A1, 38 (V0)
   28:  LW        A3, 40 (V0)
   2C:  MFC1      A2, F2
   30:  JAL       ~Func:playFX_11
   34:  LI        A0, 2
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80243090
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  JAL       ~Func:get_npc_safe
    C:  LI        A0, FFFC
   10:  LIF       F0, 30.0
   18:  LWC1      F2, 3C (V0)
   1C:  ADD.S     F2, F2, F0
   20:  SWC1      F0, 10 (SP)
   24:  LW        A1, 38 (V0)
   28:  LW        A3, 40 (V0)
   2C:  MFC1      A2, F2
   30:  JAL       ~Func:playFX_11
   34:  LI        A0, 4
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Unknown $???_80243D88
{
	430C0000 43340000 435C0000
}

#new:Function $Function_802429D0
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S6, 40 (SP)
    8:  COPY      S6, A0
    C:  SW        S0, 28 (SP)
   10:  COPY      S0, A1
   14:  SW        RA, 44 (SP)
   18:  SW        S5, 3C (SP)
   1C:  SW        S4, 38 (SP)
   20:  SW        S3, 34 (SP)
   24:  SW        S2, 30 (SP)
   28:  SW        S1, 2C (SP)
   2C:  SDC1      F24, 58 (SP)
   30:  SDC1      F22, 50 (SP)
   34:  SDC1      F20, 48 (SP)
   38:  LW        S3, C (S6)
   3C:  JAL       ~Func:get_npc_safe
   40:  LI        A0, FFFC
   44:  ADDIU     A1, SP, 18
   48:  LAW       A0, 80077410
   50:  ADDIU     A2, SP, 1C
   54:  SLL       V1, A0, 2
   58:  ADDU      V1, V1, A0
   5C:  SLL       V1, V1, 2
   60:  SUBU      V1, V1, A0
   64:  SLL       A0, V1, 3
   68:  ADDU      V1, V1, A0
   6C:  SLL       V1, V1, 3
   70:  LTF       F12, V1 (800B1DEC)
   7C:  JAL       ~Func:sin_cos_deg
   80:  COPY      S5, V0
   84:  BEQ       S0, R0, .o1FC
   88:  NOP
   8C:  JAL       ~Func:general_heap_malloc
   90:  LI        A0, 68
   94:  COPY      S2, V0
   98:  COPY      A0, S6
   9C:  CLEAR     S1
   A0:  LI        S4, FFFF
   A4:  SW        S2, 60 (S6)
   A8:  LW        A1, 0 (S3)
   AC:  LIF       F24, 12.5
   B4:  LIF       F22, 1.0
   BC:  MTC1      R0, F20
   C0:  JAL       ~Func:get_variable
   C4:  COPY      S0, S2
   C8:  JAL       ~Func:get_entity_by_index
   CC:  COPY      A0, V0
   D0:  SW        V0, 5C (S2)
        .oD4
   D4:  LW        V0, 5C (S2)
   D8:  LWC1      F0, 4C (V0)
   DC:  CLEAR     A0
   E0:  SWC1      F22, 10 (SP)
   E4:  SW        S4, 14 (SP)
   E8:  ADD.S     F0, F0, F24
   EC:  LW        A1, 48 (V0)
   F0:  LW        A3, 50 (V0)
   F4:  MFC1      A2, F0
   F8:  JAL       ~Func:playFX_51
   FC:  ADDIU     S1, S1, 1
  100:  SW        V0, 8 (S0)
  104:  SWC1      F20, 2C (S0)
  108:  SWC1      F20, 20 (S0)
  10C:  SWC1      F20, 14 (S0)
  110:  SWC1      F20, 50 (S0)
  114:  SWC1      F20, 44 (S0)
  118:  SWC1      F20, 38 (S0)
  11C:  SLTI      V0, S1, 3
  120:  BNE       V0, R0, .oD4
  124:  ADDIU     S0, S0, 4
  128:  CLEAR     S1
  12C:  COPY      S0, S2
  130:  LA        S4, $???_80243D88
  138:  LIF       F20, 50.0
  140:  LI        S3, 44
  144:  SW        R0, 0 (S2)
  148:  SW        R0, 4 (S2)
  14C:  SW        R0, 60 (S2)
  150:  SW        R0, 64 (S2)
        .o154
  154:  ADDIU     A0, SP, 20
  158:  MFC1      A2, F20
  15C:  LW        A3, 0 (S4)
  160:  ADDU      A1, S2, S3
  164:  JAL       ~Func:add_vec2D_polar
  168:  SW        R0, 20 (SP)
  16C:  LWC1      F2, 1C (SP)
  170:  LWC1      F4, 20 (SP)
  174:  MUL.S     F2, F2, F4
  178:  NOP
  17C:  LWC1      F0, 18 (SP)
  180:  MUL.S     F0, F0, F4
  184:  NOP
  188:  SWC1      F2, 38 (S0)
  18C:  SWC1      F0, 50 (S0)
  190:  LW        V0, 5C (S2)
  194:  LWC1      F0, 38 (S0)
  198:  LWC1      F2, 48 (V0)
  19C:  ADD.S     F2, F2, F0
  1A0:  LWC1      F0, 38 (S5)
  1A4:  SUB.S     F0, F0, F2
  1A8:  SWC1      F0, 38 (S0)
  1AC:  LW        V0, 5C (S2)
  1B0:  LWC1      F0, 44 (S0)
  1B4:  LWC1      F2, 4C (V0)
  1B8:  ADD.S     F2, F2, F0
  1BC:  LWC1      F0, 3C (S5)
  1C0:  SUB.S     F0, F0, F2
  1C4:  SWC1      F0, 44 (S0)
  1C8:  LW        V0, 5C (S2)
  1CC:  LWC1      F0, 50 (S0)
  1D0:  LWC1      F2, 50 (V0)
  1D4:  ADDIU     S4, S4, 4
  1D8:  ADD.S     F2, F2, F0
  1DC:  LWC1      F0, 40 (S5)
  1E0:  ADDIU     S3, S3, 4
  1E4:  SUB.S     F0, F0, F2
  1E8:  ADDIU     S1, S1, 1
  1EC:  SLTI      V0, S1, 3
  1F0:  SWC1      F0, 50 (S0)
  1F4:  BNE       V0, R0, .o154
  1F8:  ADDIU     S0, S0, 4
        .o1FC
  1FC:  LW        S2, 60 (S6)
  200:  LW        V1, 0 (S2)
  204:  LI        V0, 1
  208:  BEQ       V1, V0, .o2EC
  20C:  SLTI      V0, V1, 2
  210:  BEQL      V0, R0, .o228
  214:  LI        V0, 2
  218:  BEQ       V1, R0, .o238
  21C:  LI        A0, 5
  220:  BEQ       R0, R0, .o3D0
  224:  NOP
        .o228
  228:  BEQ       V1, V0, .o38C
  22C:  NOP
  230:  BEQ       R0, R0, .o3D0
  234:  NOP
        .o238
  238:  CLEAR     S1
  23C:  LA        S4, $???_80243D88
  244:  LI        S3, 20
  248:  LUI       A2, 4248
  24C:  MTC1      R0, F0
  250:  LI        V0, 14
  254:  SW        V0, 10 (SP)
  258:  MFC1      A1, F0
  25C:  LW        A3, 60 (S2)
  260:  MTC1      A1, F22
  264:  JAL       ~Func:update_lerp
  268:  COPY      S0, S2
  26C:  MOV.S     F20, F0
        .o270
  270:  MFC1      A2, F20
  274:  ADDIU     A0, SP, 20
  278:  SWC1      F22, 20 (S0)
  27C:  LW        A3, 0 (S4)
  280:  ADDU      A1, S2, S3
  284:  JAL       ~Func:add_vec2D_polar
  288:  SWC1      F22, 20 (SP)
  28C:  LWC1      F4, 1C (SP)
  290:  LWC1      F0, 20 (SP)
  294:  MUL.S     F4, F4, F0
  298:  NOP
  29C:  LWC1      F2, 18 (SP)
  2A0:  ADDIU     S4, S4, 4
  2A4:  MUL.S     F2, F2, F0
  2A8:  NOP
  2AC:  ADDIU     S3, S3, 4
  2B0:  ADDIU     S1, S1, 1
  2B4:  SLTI      V0, S1, 3
  2B8:  SWC1      F4, 14 (S0)
  2BC:  SWC1      F2, 2C (S0)
  2C0:  BNE       V0, R0, .o270
  2C4:  ADDIU     S0, S0, 4
  2C8:  LW        V0, 60 (S2)
  2CC:  ADDIU     V0, V0, 1
  2D0:  SW        V0, 60 (S2)
  2D4:  SLTI      V0, V0, 15
  2D8:  BNE       V0, R0, .o3D0
  2DC:  LI        V0, 1
  2E0:  SW        V0, 0 (S2)
  2E4:  BEQ       R0, R0, .o3D0
  2E8:  SW        R0, 60 (S2)
        .o2EC
  2EC:  CLEAR     S1
  2F0:  LA        S4, $???_80243D88
  2F8:  LI        S3, 20
  2FC:  COPY      S0, S2
  300:  LIF       F20, 50.0
  308:  MTC1      R0, F22
        .o30C
  30C:  MFC1      A2, F20
  310:  ADDIU     A0, SP, 20
  314:  SWC1      F22, 20 (S0)
  318:  LW        A3, 0 (S4)
  31C:  ADDU      A1, S2, S3
  320:  JAL       ~Func:add_vec2D_polar
  324:  SWC1      F22, 20 (SP)
  328:  LWC1      F4, 1C (SP)
  32C:  LWC1      F0, 20 (SP)
  330:  MUL.S     F4, F4, F0
  334:  NOP
  338:  LWC1      F2, 18 (SP)
  33C:  ADDIU     S4, S4, 4
  340:  MUL.S     F2, F2, F0
  344:  NOP
  348:  ADDIU     S3, S3, 4
  34C:  ADDIU     S1, S1, 1
  350:  SLTI      V0, S1, 3
  354:  SWC1      F4, 14 (S0)
  358:  SWC1      F2, 2C (S0)
  35C:  BNE       V0, R0, .o30C
  360:  ADDIU     S0, S0, 4
  364:  LW        V0, 60 (S2)
  368:  ADDIU     V0, V0, 1
  36C:  SW        V0, 60 (S2)
  370:  SLTI      V0, V0, 10
  374:  BNE       V0, R0, .o3D0
  378:  LI        V0, F
  37C:  SW        V0, 60 (S2)
  380:  LI        V0, 2
  384:  BEQ       R0, R0, .o3D0
  388:  SW        V0, 0 (S2)
        .o38C
  38C:  LW        V0, 60 (S2)
  390:  ADDIU     V0, V0, 1
  394:  SW        V0, 60 (S2)
  398:  SLTI      V0, V0, 1F
  39C:  BNE       V0, R0, .o3D0
  3A0:  CLEAR     S1
  3A4:  COPY      A1, S2
        .o3A8
  3A8:  LW        V0, 8 (A1)
  3AC:  LW        V1, 0 (V0)
  3B0:  ADDIU     S1, S1, 1
  3B4:  ORI       V1, V1, 10
  3B8:  SW        V1, 0 (V0)
  3BC:  SLTI      V0, S1, 3
  3C0:  BNE       V0, R0, .o3A8
  3C4:  ADDIU     A1, A1, 4
  3C8:  BEQ       R0, R0, .o504
  3CC:  LI        V0, 2
        .o3D0
  3D0:  LW        V1, 4 (S2)
  3D4:  BEQ       V1, R0, .o3EC
  3D8:  LI        V0, 1
  3DC:  BEQ       V1, V0, .o40C
  3E0:  CLEAR     S1
  3E4:  BEQ       R0, R0, .o4C0
  3E8:  COPY      A1, S2
        .o3EC
  3EC:  LW        V0, 64 (S2)
  3F0:  ADDIU     V0, V0, 1
  3F4:  SW        V0, 64 (S2)
  3F8:  SLTI      V0, V0, 10
  3FC:  BNE       V0, R0, .o4BC
  400:  CLEAR     S1
  404:  BEQ       R0, R0, .o4B0
  408:  LI        V0, 1
        .o40C
  40C:  MTC1      R0, F20
  410:  LI        S3, 14
  414:  COPY      S0, S2
        .o418
  418:  MFC1      A1, F20
  41C:  SW        S3, 10 (SP)
  420:  LW        A2, 38 (S0)
  424:  LW        A3, 64 (S2)
  428:  JAL       ~Func:update_lerp
  42C:  LI        A0, 1
  430:  LWC1      F2, 14 (S0)
  434:  ADD.S     F2, F2, F0
  438:  MFC1      A1, F20
  43C:  SWC1      F2, 14 (S0)
  440:  SW        S3, 10 (SP)
  444:  LW        A2, 44 (S0)
  448:  LW        A3, 64 (S2)
  44C:  JAL       ~Func:update_lerp
  450:  LI        A0, 1
  454:  LWC1      F2, 20 (S0)
  458:  ADD.S     F2, F2, F0
  45C:  MFC1      A1, F20
  460:  SWC1      F2, 20 (S0)
  464:  SW        S3, 10 (SP)
  468:  LW        A2, 50 (S0)
  46C:  LW        A3, 64 (S2)
  470:  JAL       ~Func:update_lerp
  474:  LI        A0, 1
  478:  LWC1      F2, 2C (S0)
  47C:  ADD.S     F2, F2, F0
  480:  ADDIU     S1, S1, 1
  484:  SLTI      V0, S1, 3
  488:  SWC1      F2, 2C (S0)
  48C:  BNE       V0, R0, .o418
  490:  ADDIU     S0, S0, 4
  494:  LW        V0, 64 (S2)
  498:  ADDIU     V0, V0, 1
  49C:  SW        V0, 64 (S2)
  4A0:  SLTI      V0, V0, 15
  4A4:  BNE       V0, R0, .o4BC
  4A8:  CLEAR     S1
  4AC:  LI        V0, 2
        .o4B0
  4B0:  SW        V0, 4 (S2)
  4B4:  SW        R0, 64 (S2)
  4B8:  CLEAR     S1
        .o4BC
  4BC:  COPY      A1, S2
        .o4C0
  4C0:  LW        V0, 8 (A1)
  4C4:  LWC1      F0, 14 (A1)
  4C8:  LW        V0, C (V0)
  4CC:  SWC1      F0, 10 (V0)
  4D0:  LW        V0, 8 (A1)
  4D4:  LWC1      F0, 20 (A1)
  4D8:  LW        V0, C (V0)
  4DC:  ADDIU     S1, S1, 1
  4E0:  SWC1      F0, 14 (V0)
  4E4:  LW        V0, 8 (A1)
  4E8:  LWC1      F0, 2C (A1)
  4EC:  LW        V0, C (V0)
  4F0:  SWC1      F0, 18 (V0)
  4F4:  SLTI      V0, S1, 3
  4F8:  BNE       V0, R0, .o4C0
  4FC:  ADDIU     A1, A1, 4
  500:  CLEAR     V0
        .o504
  504:  LW        RA, 44 (SP)
  508:  LW        S6, 40 (SP)
  50C:  LW        S5, 3C (SP)
  510:  LW        S4, 38 (SP)
  514:  LW        S3, 34 (SP)
  518:  LW        S2, 30 (SP)
  51C:  LW        S1, 2C (SP)
  520:  LW        S0, 28 (SP)
  524:  LDC1      F24, 58 (SP)
  528:  LDC1      F22, 50 (SP)
  52C:  LDC1      F20, 48 (SP)
  530:  JR        RA
  534:  ADDIU     SP, SP, 60
}

#new:Script $Script_80243D94
{
    0:  Wait  10`
    C:  Call  PlaySound ( 0000212D )
   1C:  Call  $Function_80242914    ( *MapVar[0] )
   2C:  Wait  85`
   38:  Thread
   40:  	Call  PlaySound ( 0000212E )
   50:  	Call  $Function_80242F08    ( 00000046 00000046 )
   64:  	Wait  27`
   70:  	Call  PlaySound ( 0000208E )
   80:  	Call  $Function_80242F08    ( 00000032 00000032 )
   94:  EndThread
   9C:  Thread
   A4:  	Wait  3`
   B0:  	Call  $Function_8024240C    ( *MapVar[0] )
   C0:  EndThread
   C8:  Thread
   D0:  	Wait  47`
   DC:  	Call  $Function_80242978 ( )
   E8:  	Call  $Function_80243048 ( )
   F4:  	Wait  5`
  100:  	Call  $Function_80243090 ( )
  10C:  	Wait  5`
  118:  	Call  $Function_80243048 ( )
  124:  EndThread
  12C:  Wait  3`
  138:  Call  $Function_802429D0    ( *MapVar[0] )
  148:  Wait  30`
  154:  Return
  15C:  End
}

#new:Function $Function_80242438
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        S1, C (S0)
   18:  LW        A1, 0 (S1)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S1, S1, 4
   24:  COPY      A0, S0
   28:  LA        V1, 8010F290
   30:  SLL       V0, V0, 3
   34:  ADDU      V0, V0, V1
   38:  LBU       A2, 15 (V0)
   3C:  LW        A1, 0 (S1)
   40:  ADDIU     A2, A2, 1
   44:  SB        A2, 15 (V0)
   48:  SLL       A2, A2, 18
   4C:  JAL       ~Func:set_variable
   50:  SRA       A2, A2, 18
   54:  LW        RA, 18 (SP)
   58:  LW        S1, 14 (SP)
   5C:  LW        S0, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 20
}

#new:Function $Function_80242818
{
    0:  LAB       V0, 8010F2A2
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  SLL       V0, V0, 4
   14:  LTW       A0, V0 (8008EF20)
   20:  JAL       ~Func:set_message_string
   24:  CLEAR     A1
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Script $Script_802415F8
{
%    0:  If  *MF_JAM00_SuperBlock  ==  .True
%    10:  	Return
%    18:  EndIf
   20:  Call  IsStartingConversation    ( *Var0 )
   30:  If  *Var0  ==  .True
   40:  	Return
   48:  EndIf
   50:  Call  $Function_802430D8 ( )
   5C:  If  *Var0  ==  .True
   6C:  	Return
   74:  EndIf
   7C:  Call  ModifyGlobalOverrideFlags ( 00000001 00200000 )
   90:  Call  $Function_802423D0 ( )
   9C:  Call  DisablePlayerInput    ( .True )
   AC:  Call  DisablePartnerAI      ( 00000000 )
   BC:  Call  SetNpcFlagBits        ( .Npc:Partner 00000100 .True )
   D4:  Call  $Function_80242850    ( *MapVar[0] *Var9 )
   E8:  Call  FindKeyItem   ( .Item:UltraStone *VarC )
   FC:  Call  $Function_802424F0 ( )
  108:  If  *Var0  ==  FFFFFFFF
  118:  	Call  ShowMessageAtScreenPos    ( 001D00DC  160`  40` ) % You have no member you can upgrade now.
  130:  	Wait  10`
  13C:  	Call  $Function_802428E0        ( *Var9 )
  14C:  	Call  DisablePlayerInput        ( .False )
%   15C:  	Call  EnablePartnerAI ( )
  168:  	Call  ModifyGlobalOverrideFlags ( 00000000 00200000 )
  17C:  	Call  $Function_802423EC ( )
  188:  	Return
  190:  EndIf
%   198:  If  *GF_Tutorial_SuperBlock  ==  .False
%   1A8:  	Set   *GF_Tutorial_SuperBlock  .True
%   1B8:  	Call  ShowMessageAtScreenPos    ( 001D00DA  160`  40` ) % This is a Super Block. With this, you can upgrade  ...
%   1D0:  Else
%   1D8:  	Call  ShowMessageAtScreenPos    ( 001D00DB  160`  40` ) % With this, you can upgrade one of your party membe ...
%   1F0:  EndIf
%   1F8:  Call  $Function_8024259C ( )
%   204:  If  *Var0  ==  FFFFFFFF
%   214:  	Call  $Function_802428E0        ( *Var9 )
%   224:  	Call  DisablePlayerInput        ( .False )
%   234:  	Call  EnablePartnerAI ( )
%   240:  	Call  ModifyGlobalOverrideFlags ( 00000000 00200000 )
%   254:  	Call  $Function_802423EC ( )
%   260:  	Return
%   268:  EndIf
%   270:  Set   *VarA  *Var0
%   280:  Set   *VarB  *Var1
%   290:  Call  EnablePartnerAI ( )
%   29C:  Call  GetCurrentPartnerID   ( *Var0 )
%   2AC:  If  *Var0  !=  *VarB
%   2BC:  	Call  $Function_802427EC    ( *VarB )
%   2CC:  Else
%   2D4:  	Call  802CF56C  ( 00000002 )
%   2E4:  EndIf
%   2EC:  Wait  10`
%   2F8:  Call  ShowMessageAtScreenPos    ( 001D00DF  160`  40` ) % Do you want to upgrade this member?
%   310:  Call  ShowChoice    ( 001E000D ) % Yes No
%   320:  Call  CloseMessage ( )
%   32C:  If  *Var0  !=  00000000
%   33C:  	Call  $Function_802428E0        ( *Var9 )
%   34C:  	Call  DisablePlayerInput        ( .False )
%   35C:  	Call  EnablePartnerAI ( )
%   368:  	Call  ModifyGlobalOverrideFlags ( 00000000 00200000 )
%   37C:  	Call  $Function_802423EC ( )
%   388:  	Return
%   390:  EndIf
  398:  ExecWait  $Script_80243D94
  3A4:  Call  $Function_80242438    ( *VarB *VarD )
  %3B8:  Set   *MF_JAM00_SuperBlock  .True
  3C8:  Call  $Function_802428E0    ( *Var9 )
  3D8:  Call  $Function_80242818 ( )
%   3E4:  If  *VarD  ==  00000001
%   3F4:  	Call  ShowMessageAtScreenPos    ( 001D00DD  160`  40` ) % is upgraded to Super-rank!
%   40C:  Else
%   414:  	Call  ShowMessageAtScreenPos    ( 001D00DE  160`  40` ) % is upgraded to Ultra-rank!
%   42C:  EndIf
  434:  Call  DisablePlayerInput        ( .False )
%   444:  Call  EnablePartnerAI ( )
  450:  Call  ModifyGlobalOverrideFlags ( 00000000 00200000 )
  464:  Call  $Function_802423EC ( )
  470:  Return
  478:  End
}

#new:Function $Function_UpgradeParakarry
{
    LA T0, 8010F2C5
    LI T1, 01
    SB T1, 00000000, (T0)
    JR RA
    LI V0, 00000002
}

#new:Unknown $LetterList_Muskular
{
	.Item:MuskularLetter 00000000
}

#new:Script $Script_LetterDelivery_Muskular
{
	Set *Var2 .NpcID:Muskular
	Set *Var3 00150002 % Talk Animation - same format as SpeakToPlayer
	Set *Var4 00150001 % Idle Animation - same format as SpeakToPlayer
	Set *Var5 .Item:MuskularLetter % same as LetterList
	Set *Var6 00000000 % same as LetterList
	Set *Var7 002F0043 % string by parakarry
	Set *Var8 002F0061 % string by parakarry when canceling the letter select box
	Set *Var9 002F0041 % "another letter duly delivered"
	Set *VarA 002F0044 % string by other npc
	Set *VarB $LetterList_Muskular
	ExecWait  $Script_DoLetterDelivery
	Return
	End
}

#new:Script $Script_Potato { % 000000AF

    Call  DisablePlayerInput    ( .True )
    ExecWait $Script_ToggleCubeDoor
    Call  ShowConsumableChoicePopup ( )
    Call  CloseChoicePopup ( )

    Set   *Var8  *Var0
   Switch  *Var8
     	Case  <=  FFFFFFFF
     	Case  <=  00000000
            If *MF_btf_17_PotatoQuestStarted == .True
     		    Call  ShowMessageAtScreenPos    ( $String_LeaveHandsomeStarAlonePls  160`  40` )
            Else
                Call  ShowMessageAtScreenPos    ( $String_YouHaveAJobToDo  160`  40` )
            EndIf
    	Case  ==  000000AF
            ExecWait $Script_AnimatePotatoDrop
            Call RemoveItemAt( *Var[1] )
            Call  ShowMessageAtScreenPos    ( $String_PotatoResponse 000000A0 00000028 )
            Call  MakeItemEntity    ( .Item:Cake 847` 0` 51` .ItemSpawnMode:Decoration 0` )
            Set   *Var7  *Var0
            Set   *Var6  35`
            Set   *Var5  00000005
            Set *Debug[2] 0
            Call  MakeLerp  ( 847` 783` 20` .Easing:CubicOut )
            Loop 16`
                Call  UpdateLerp ( )
                Call  SetItemPos    ( *Var7 *Var0 *Var6 51` )
               Add   *Var6  *Var5
               Add   *Var5  FFFFFFFF
               Wait  1`
                  If  *Var1  ==  00000000
                      BreakLoop % Shouldn't ever trigger but just in case ig
               EndIf
             EndLoop
             Call RemoveItemEntity ( *Var7 )
             Call ShowGotItem ( .Item:Cake .True 00000000 )
             Call AddItem ( .Item:Cake 00000000 ) % Idk if this might be jank with more than 1 available item
             Set *MF_btf_17_PotatoQuestStarted .True
        Default
            If *MF_btf_17_PotatoQuestStarted == .True
                Call  ShowMessageAtScreenPos    ( $String_LeaveHandsomeStarAlonePls  160`  40` )
            Else
                Call  ShowMessageAtScreenPos    ( $String_YouHaveAJobToDo  160`  40` )
            EndIf
    EndSwitch
    ExecWait $Script_ToggleCubeDoor
    Call  DisablePlayerInput    ( .False )
Return
End
}

#new:String $String_LeaveHandsomeStarAlonePls {
[Style Inspect]
Smells like Hash Browns.[Pause:10][BR]
You should probably let him cook[BR]
and start to deliver the letters.
[WAIT][END]
}

#new:String $String_YouHaveAJobToDo {
[Style Inspect]
Maybe you should just get to[BR]
delivering those letters now.
[WAIT][END]
}

#new:String $String_PotatoResponse
{
[Style Right]
[Voice Star]Hey, what kind of tomfoolery[BR]
is this?[Pause:10] How would you guys like it[BR]
if I were to drop an Iced P-[Pause:10][BR]
...an Iced Potato?[BR][Wait][Next]
[Pause:6]
...Nevermind, I know what[BR]
I'll have for dinner now.[Pause:6][BR]
Take this in exchange, I'd much[BR]
rather have the Potato over it.[BR]
[WAIT][END]
}

#new:Script $Script_AnimatePotatoDrop { % Rough structure copied from the Well Script in flo_22.mscr 

    Call PlayerMoveTo ( 783` 51` 16` )
    Wait 16`
    Call PlayerFaceNpc ( .NpcID:Muskular .False )
    Wait 8`
    Call  SetPlayerAnimation    ( 0006000E )
    Thread
        Call  GetPlayerPos      ( *Var2 *Var3 *Var4 )
     	Set   *Var6  = *Var3 + 35`
     	Set   *Var5  00000005
        Set   *Var4 = *Var2 + 64`
     	Call  MakeItemEntity    ( *Var8 *Var2 *Var6 51` .ItemSpawnMode:Decoration 00000000 )
     	Set   *Var7  *Var0
     	Call  MakeLerp  ( *Var2 *Var4 20` .Easing:CubicOut )
     	Loop
     		Call  UpdateLerp ( )
     		Call  SetItemPos    ( *Var7 *Var0 *Var6 51` )
    		Add   *Var6  *Var5
    		Add   *Var5  FFFFFFFF
    		Wait  1`
   		    If  *Var1  ==  00000000
   			    BreakLoop
    		EndIf
  	    EndLoop
    	Call  RemoveItemEntity  ( *Var7 )
    EndThread
    Wait  2`
    Call  PlaySoundAt   ( 00000302 00000000 847` 00000000 51` )
    Wait  5`
    Call  SetPlayerAnimation    ( 00010002 )
    Wait  10`
    Return
   End
}

#new:NpcGroupList $NpcGroupList_8025136C
{
	00000001 $NpcGroupList_Muskular 00000000
	00000000 00000000 00000000
}

#new:NpcGroup $NpcGroupList_Muskular
{
	.NpcID:Muskular   $NpcSettings_80247CE4 ~Vec3f:Muskular % 100 0 -256
	00002809 $Script_Init_8024D134 00000000 00000000 0000005A
	~NoDrops
	~Movement:Muskular
	~AnimationTable:Muskular % .Sprite:Gooma
	00000000 00000000 00000000 001A0064 % She's my grandma, Gooma. I hope she lives forever! ...


}

#new:NpcSettings $NpcSettings_80247CE4
{
	00000000 001C0001 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00630000
}

#new:Script $Script_Init_8024D134
{
    0:  Call  BindNpcIdle       ( .Npc:Self $Script_Idle_8024CDAC )
   28:  Return
   30:  End
}

#new:Script $Script_Idle_8024CDAC
{
	Call SetNpcAnimation ( .NpcID:Muskular 00150001 )
    Call EnableNpcShadow ( .NpcID:Muskular .False )
   C4:  Return
   CC:  End
}